{"version":3,"sources":["common/apollo-client.ts","hooks/user/isAuth.ts","hooks/author/addAuthor.ts","hooks/author/updateAuthor.ts","hooks/author/useGetAllAuthors.ts","components/Authors/AuthorModal.tsx","hooks/author/deleteAuthor.ts","components/Authors/AuthorsTable.tsx","pages/Authors.tsx","hooks/book/addBook.ts","hooks/book/updateBook.ts","hooks/book/useGetAllBooks.ts","hooks/category/useGetCategories.ts","components/Books/BookModal.tsx","components/Books/BooksTable.tsx","pages/Books.tsx","hooks/category/addCategory.ts","components/Categories/AddNewCategory.tsx","hooks/category/deleteCategory.ts","components/Categories/CategoriesTable.tsx","pages/Categories.tsx","components/Books/BookCard.tsx","components/Books/BookDeck.tsx","components/Books/Filter.tsx","hooks/book/useGetByAuthor.ts","hooks/book/useGetByCategory.ts","pages/Home.tsx","hooks/user/LoginUser.ts","pages/Login.tsx","hooks/user/Register.ts","pages/Register.tsx","hooks/user/Logout.ts","components/Header/MenuItem.tsx","components/Header/Header.tsx","components/app/Routes.tsx","components/app/App.tsx","index.tsx"],"names":["client","ApolloClient","uri","cache","InMemoryCache","credentials","GET_ME","gql","ADD_AUTHOR","UPDATE_AUTHOR","GET_AUTHORS","useGetAllAuthors","useQuery","data","error","AuthorModal","props","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","useMutation","refetchQueries","query","addAuthor","updateAuthor","saveChanges","a","method","variables","id","alert","onHide","Modal","size","centered","Header","closeButton","Title","Body","Input","value","placeholder","onChange","e","target","fullWidth","Footer","Button","onClick","DELETE_AUTHOR","AuthorsTable","React","modalShow","setModalShow","authors","setAuthors","modal","setModal","removeAuthor","firstLoad","useEffect","getAllAuthors","deleteAuthor","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","author","scope","IconButton","_id","show","editAuthor","Authors","Container","Row","className","Col","xs","variant","xl","ADD_BOOK","UPDATE_BOOK","GET_BOOKS","useGetAllBooks","GET_CATEGORIES","useGetCategories","BookModal","title","setTitle","price","setPrice","undefined","setAuthor","category","setCategory","addBook","updateBook","categories","getAllCategories","book","authorId","categoryId","bookId","type","parseInt","InputLabel","Select","find","authorFind","MenuItem","categoryFind","c","name","BooksTable","books","setBooks","removeBook","getAllBooks","deleteBook","editBook","Books","ADD_CATEGORY","AddNewCategory","categoryName","setCategoryName","addCategory","window","location","reload","DELETE_CATEGORY","CategoriesTable","setCategories","removeCategory","DeleteCategory","Categories","BookCard","Card","Text","BookDeck","md","length","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Filter","classes","firstAuthorsLoad","firstCategoriesLoad","authorID","setAuthorID","categoryID","setCategoryID","FormControl","filterByAuthor","filterByCategory","GET_BOOKS_BY_AUTHOR","GET_BOOKS_BY_CATEGORY","Home","booksByAuthor","loadBooksByAuthor","refetch","useGetBooksByAuthor","booksByCategory","loadBooksByCategory","useGetBooksByCategory","getBooksByAuthor","getBooksByCategory","LOGIN","paper","display","flexDirection","alignItems","form","width","submit","Login","errorMessage","setErrorMessage","password","setPassword","login","submitHandler","preventDefault","replace","Alert","maxWidth","noValidate","onSubmit","TextField","required","label","color","REGISTER","Register","register","handleSubmit","href","LOGOUT","Nav","Link","style","pathname","to","children","me","user","console","log","logout","Navbar","collapseOnSelect","bg","expand","Brand","Toggle","Collapse","Routes","IsAuth","exact","path","App","ApolloProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bc483c8.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: '/graphql/',\n  cache: new InMemoryCache(),\n  credentials: 'include'\n})\n\nexport default client","import { gql, useQuery } from \"@apollo/client\";\nimport { User } from \"../../common/interfaces/User\";\n\nconst GET_ME = gql`\n  query me {\n    me {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n`;\nexport const IsAuth = (): User | undefined => {\n  const { data, error } = useQuery(GET_ME);\n  if (error && process.env.NODE_ENV === 'development') {\n    console.log(error);\n  }\n\n  return data?.me;\n};\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_AUTHOR = gql`\n  mutation addAuthor($data: AuthorInput!) {\n    addAuthor(data: $data) {\n      _id\n      email\n    }\n  }\n`;","import { gql } from \"@apollo/client\";\n\nexport const UPDATE_AUTHOR = gql`\n  mutation updateAuthor($data: AuthorInput!) {\n    updateAuthor(data: $data) {\n      _id\n      email\n    }\n  }\n`;\n","import { gql, useQuery } from \"@apollo/client\";\n\nexport const GET_AUTHORS = gql`\n  query getAllAuthors {\n    getAllAuthors {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n`;\nexport const useGetAllAuthors = () => {\n  const { data, error } = useQuery(GET_AUTHORS);\n  if (error && process.env.NODE_ENV === 'development') {\n    console.log(error);\n  }\n\n  return data\n};\n","import {  useMutation } from \"@apollo/client\";\nimport { Input } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { ADD_AUTHOR } from \"../../hooks/author/addAuthor\";\nimport { UPDATE_AUTHOR } from \"../../hooks/author/updateAuthor\";\nimport { GET_AUTHORS } from \"../../hooks/author/useGetAllAuthors\";\n\nfunction AuthorModal(props: any) {\n  const [firstName, setFirstName] = useState(\n    props.firstName ? props.firstName : \"\"\n  );\n  const [lastName, setLastName] = useState(\n    props.lastName ? props.lastName : \"\"\n  );\n  const [email, setEmail] = useState(props.email ? props.email : \"\");\n\n  const [addAuthor] = useMutation(ADD_AUTHOR, {\n    refetchQueries: [{ query: GET_AUTHORS }],\n  });\n  const [updateAuthor] = useMutation(UPDATE_AUTHOR, {\n    refetchQueries: [{ query: GET_AUTHORS }],\n  });\n\n  const saveChanges = async () => {\n    try {\n      if (props.method === \"add\") {\n        await addAuthor({\n          variables: { data: { firstName, lastName, email } },\n        });\n      } else if (props.method === \"edit\") {\n        await updateAuthor({\n          variables: { data: { id: props.id, firstName, lastName, email } },\n        });\n      }\n    } catch (err: any) {\n      alert(err);\n    }\n\n    props.onHide();\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.method} Author\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Author details</h4>\n        <Input\n          value={firstName}\n          placeholder=\"first name\"\n          onChange={(e) => setFirstName(e.target.value)}\n          fullWidth\n        />\n        <Input\n          value={lastName}\n          placeholder=\"last name\"\n          onChange={(e) => setLastName(e.target.value)}\n          fullWidth\n        />\n        <Input\n          value={email}\n          placeholder=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n          fullWidth\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        <Button onClick={() => saveChanges()}>Save</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default AuthorModal;\n","import { gql } from \"@apollo/client\";\n\nexport const DELETE_AUTHOR = gql`\n  mutation removeAuthor($email: String!) {\n    removeAuthor(email:$email) {\n      _id\n      email\n    }\n  }\n`;\n","import { useMutation } from \"@apollo/client\";\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Author } from \"../../common/interfaces/Author\";\nimport { DELETE_AUTHOR } from \"../../hooks/author/deleteAuthor\";\nimport {\n  GET_AUTHORS,\n  useGetAllAuthors,\n} from \"../../hooks/author/useGetAllAuthors\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AuthorModal from \"./AuthorModal\";\n\nfunction AuthorsTable() {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [authors, setAuthors] = useState<Author[] | undefined>();\n  const [modal, setModal] = useState(<></>);\n  const [removeAuthor] = useMutation(DELETE_AUTHOR, {\n    refetchQueries: [{ query: GET_AUTHORS }],\n  });\n\n  const firstLoad = useGetAllAuthors();\n\n  useEffect(() => {\n    setAuthors(firstLoad?.getAllAuthors);\n  }, [firstLoad]);\n\n  const deleteAuthor = async (email: string | undefined) => {\n    try {\n      removeAuthor({ variables: { email } });\n    } catch {}\n  };\n\n  const editAuthor = (author: Author) => {\n    setModal(\n      <AuthorModal\n      id={author._id}\n        method=\"edit\"\n        firstName={author.firstName}\n        lastName={author.lastName}\n        email={author.email}\n        show={true}\n        onHide={() => setModalShow(false)}\n      />\n    );\n    setModalShow(true);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>First Name</TableCell>\n              <TableCell>Last Name</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {authors?.map((author: Author) => (\n              <TableRow key={author._id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {author.firstName}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {author.lastName}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {author.email}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    component=\"span\"\n                    onClick={() => deleteAuthor(author.email)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"edit\"\n                    component=\"span\"\n                    onClick={() => editAuthor(author)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {modalShow && modal}\n    </>\n  );\n}\n\nexport default AuthorsTable;\n","import React from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport AuthorModal from \"../components/Authors/AuthorModal\";\nimport AuthorsTable from \"../components/Authors/AuthorsTable\";\n\nfunction Authors() {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <Container>\n      <Row className=\"mt-5\">\n        <Col xs={6}>\n          <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n            Add New Author\n          </Button>\n          <AuthorModal\n            method=\"add\"\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mt-5 justify-content-md-center\">\n        <Col xs={12} xl={8}>\n          <AuthorsTable />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Authors;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_BOOK = gql`\n  mutation addBook($book: BookInput!) {\n    addBook(book: $book) {\n      _id\n    }\n  }\n`;","import { gql } from \"@apollo/client\";\n\nexport const UPDATE_BOOK = gql`\n  mutation updateBook($book: BookInput!) {\n    updateBook(book: $book) {\n      _id\n    }\n  }\n`;\n","import { gql, useQuery } from \"@apollo/client\";\n\nexport const GET_BOOKS = gql`\n  query getAllBooks {\n    getAllBooks {\n      _id\n      title\n      price\n      author{\n        _id\n        firstName\n        lastName\n        email\n      }\n      category{\n        _id\n        name\n      }\n    }\n  }\n`;\nexport const useGetAllBooks = () => {\n  const { data, error } = useQuery(GET_BOOKS);\n  if (error && process.env.NODE_ENV === 'development') {\n    console.log(error);\n  }\n  return data\n};\n","import { gql, useQuery } from \"@apollo/client\";\n\nexport const GET_CATEGORIES = gql`\n  query getAllCategories {\n    getAllCategories {\n      _id\n      name\n    }\n  }\n`;\nexport const useGetCategories = () => {\n  const { data, error } = useQuery(GET_CATEGORIES);\n  if (error && process.env.NODE_ENV === 'development') {\n    console.log(error);\n  }\n  return data\n};\n","import {  useMutation } from \"@apollo/client\";\nimport { Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { Author } from \"../../common/interfaces/Author\";\nimport { Catergory } from \"../../common/interfaces/Category\";\nimport { useGetAllAuthors } from \"../../hooks/author/useGetAllAuthors\";\nimport { ADD_BOOK } from \"../../hooks/book/addBook\";\nimport { UPDATE_BOOK } from \"../../hooks/book/updateBook\";\nimport { GET_BOOKS } from \"../../hooks/book/useGetAllBooks\";\nimport { useGetCategories } from \"../../hooks/category/useGetCategories\";\n\nfunction BookModal(props: any) {\n  const [title, setTitle] = useState(props.title ? props.title : \"\");\n  const [price, setPrice] = useState<number>(props.price ? props.price : 0);\n  const [author, setAuthor] = useState<Author | undefined>(\n    props.author ? props.author : undefined\n  );\n  const [category, setCategory] = useState<Catergory | undefined>(\n    props.category ? props.category : undefined\n  );\n\n  const [addBook] = useMutation(ADD_BOOK, {\n    refetchQueries: [{ query: GET_BOOKS }],\n  });\n  const [updateBook] = useMutation(UPDATE_BOOK, {\n    refetchQueries: [{ query: GET_BOOKS }],\n  });\n\n  const authors: Author[] = useGetAllAuthors()?.getAllAuthors;\n  const categories: Catergory[] = useGetCategories()?.getAllCategories;\n\n  const saveChanges = async () => {\n    try {\n      if (props.method === \"add\") {\n        await addBook({\n          variables: {\n            book: {\n              title,\n              price,\n              authorId: author?._id,\n              categoryId: category?._id,\n            },\n          },\n        });\n      } else if (props.method === \"edit\") {\n        await updateBook({\n          variables: {\n            book: {\n              bookId: props.id,\n              title,\n              price,\n              authorId: author?._id,\n              categoryId: category?._id,\n            },\n          },\n        });\n      }\n    } catch (err: any) {\n      alert(err);\n    }\n\n    props.onHide();\n    setTitle(\"\");\n    setPrice(0);\n    setAuthor(undefined);\n    setCategory(undefined);\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.method} Book\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Book details</h4>\n        <Input\n          value={title}\n          placeholder=\"Title\"\n          onChange={(e) => setTitle(e.target.value)}\n          fullWidth\n        />\n        <Input\n          type=\"number\"\n          value={price}\n          placeholder=\"Price\"\n          onChange={(e) => setPrice(parseInt(e.target.value))}\n          fullWidth\n        />\n        <InputLabel>Author</InputLabel>\n        <Select\n          fullWidth\n          value={author?._id}\n          onChange={(e) =>\n            setAuthor(\n              authors.find((authorFind) => authorFind._id === e.target.value)\n            )\n          }\n        >\n          {authors?.map((a: Author) => {\n            return (\n              <MenuItem key={a._id} value={a._id}>\n                {a.firstName} {a.lastName}\n              </MenuItem>\n            );\n          })}\n        </Select>\n        <InputLabel>Category</InputLabel>\n        <Select\n          fullWidth\n          value={category?._id}\n          onChange={(e) =>\n            setCategory(\n              categories.find(\n                (categoryFind) => categoryFind._id === e.target.value\n              )\n            )\n          }\n        >\n          {categories?.map((c: Catergory) => {\n            return (\n              <MenuItem key={c._id} value={c._id}>\n                {c.name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        <Button onClick={() => saveChanges()}>Save</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default BookModal;\n","import { useMutation } from \"@apollo/client\";\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { DELETE_AUTHOR } from \"../../hooks/author/deleteAuthor\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport BookModal from \"./BookModal\";\nimport { GET_BOOKS, useGetAllBooks } from \"../../hooks/book/useGetAllBooks\";\nimport { Book } from \"../../common/interfaces/Book\";\n\nfunction BooksTable() {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [books, setBooks] = useState<Book[] | undefined>();\n  const [modal, setModal] = useState(<></>);\n  const [removeBook] = useMutation(DELETE_AUTHOR, {\n    refetchQueries: [{ query: GET_BOOKS }],\n  });\n\n  const firstLoad = useGetAllBooks();\n\n  useEffect(() => {\n    setBooks(firstLoad?.getAllBooks);\n  }, [firstLoad]);\n\n  const deleteBook = async (id: string | undefined) => {\n    try {\n      removeBook({ variables: { id } });\n    } catch {}\n  };\n\n  const editBook = (book: Book) => {\n    setModal(\n      <BookModal\n        id={book._id}\n        method=\"edit\"\n        title={book.title}\n        price={book.price}\n        author={book.author}\n        category={book.category}\n        show={true}\n        onHide={() => setModalShow(false)}\n      />\n    );\n    setModalShow(true);\n  };\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Title</TableCell>\n              <TableCell>Author</TableCell>\n              <TableCell>Category</TableCell>\n              <TableCell>Price</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {books?.map((book: Book) => (\n              <TableRow key={book._id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {book.title}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {book.author.firstName} {book.author.lastName}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {book.category.name}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {book.price}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    component=\"span\"\n                    onClick={() => deleteBook(book._id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"edit\"\n                    component=\"span\"\n                    onClick={() => editBook(book)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {modalShow && modal}\n    </>\n  );\n}\n\nexport default BooksTable;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport BookModal from \"../components/Books/BookModal\";\nimport BooksTable from \"../components/Books/BooksTable\";\n\nfunction Books() {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <Container>\n      <Row className=\"mt-5\">\n        <Col xs={6}>\n          <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n            Add New Book\n          </Button>\n          <BookModal\n            method=\"add\"\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mt-5 justify-content-md-center\">\n        <Col xs={12} xl={8}>\n          <BooksTable />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Books;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_CATEGORY = gql`\n  mutation addCategory($name: String!) {\n    addCategory(name:$name) {\n      _id\n      name\n    }\n  }\n`;\n","import { useMutation } from \"@apollo/client\";\nimport { Input } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { ADD_CATEGORY } from \"../../hooks/category/addCategory\";\n\nfunction AddNewCategory() {\n  const [modalShow, setModalShow] = useState(false);\n  const [categoryName, setCategoryName] = useState(\"\");\n\n  const [addCategory] = useMutation(ADD_CATEGORY);\n\n  const createCategory = (name: string) => {\n    addCategory({ variables: { name } });\n    setModalShow(false);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n        Add new category\n      </Button>\n      <Modal\n        show={modalShow}\n        size=\"sm\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={() => setModalShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add new Category\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Insert Category Name</h4>\n          <Input onChange={(e) => setCategoryName(e.target.value)} fullWidth />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setModalShow(false)}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => createCategory(categoryName)}\n          >\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddNewCategory;\n","import { gql } from \"@apollo/client\";\n\nexport const DELETE_CATEGORY = gql`\n  mutation removeCategory($id: String!) {\n    removeCategory(id:$id) {\n      _id\n      name\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  useGetCategories,\n  GET_CATEGORIES,\n} from \"../../hooks/category/useGetCategories\";\nimport { DELETE_CATEGORY } from \"../../hooks/category/deleteCategory\";\nimport { useMutation } from \"@apollo/client\";\nimport { Catergory } from \"../../common/interfaces/Category\";\n\nfunction CategoriesTable() {\n  const [categories, setCategories] = useState<Catergory[] | undefined>();\n  const [removeCategory] = useMutation(DELETE_CATEGORY, {\n    refetchQueries: [{ query: GET_CATEGORIES }],\n  });\n\n  const firstLoad = useGetCategories();\n\n  useEffect(() => {\n    setCategories(firstLoad?.getAllCategories);\n  }, [firstLoad]);\n\n  const DeleteCategory = async (id: string | undefined) => {\n    removeCategory({ variables: { id } });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {categories?.map((category: Catergory) => (\n            <TableRow key={category.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {category.name}\n              </TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  component=\"span\"\n                  onClick={() => DeleteCategory(category._id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default CategoriesTable;\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport AddNewCategory from \"../components/Categories/AddNewCategory\";\nimport CategoriesTable from \"../components/Categories/CategoriesTable\";\n\nfunction Categories() {\n  return (\n    <Container>\n      <Row className=\"mt-5\">\n        <Col xs={6}>\n          <AddNewCategory />\n        </Col>\n      </Row>\n      <Row className=\"mt-5 justify-content-md-center\">\n        <Col xs={12} xl={8}>\n          <CategoriesTable />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Categories;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Author } from \"../../common/interfaces/Author\";\nimport { Book } from \"../../common/interfaces/Book\";\nimport { Catergory } from \"../../common/interfaces/Category\";\n\nfunction BookCard(props: any) {\n  const book: Book = props.book;\n  const author: Author = book.author;\n  const category: Catergory = book.category;\n  return (\n    <Card>\n      <Card.Header>{book.title}</Card.Header>\n      <Card.Body>\n        <Card.Text>\n          Author: {author.firstName} {author.lastName}\n        </Card.Text>\n        <Card.Text>Category: {category.name}</Card.Text>\n        <Card.Text>Price: {book.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default BookCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport { Book } from \"../../common/interfaces/Book\";\nimport BookCard from \"./BookCard\";\n\nfunction BookDeck(props: any) {\n  const [books, setBooks] = useState<Book[]>(props.books);\n\n  useEffect(() => {\n    setBooks(props.books);\n  }, [props.books]);\n\n  return (\n    <Container className=\"mt-5\">\n      <Row xs={1} md={5} className=\"g-4\">\n        {books?.length > 0 ? (\n          books?.map((book: Book) => (\n            <Col key={book._id}>\n              <BookCard book={book} />\n            </Col>\n          ))\n        ) : (\n          <h1>No Books Found</h1>\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default BookDeck;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  createStyles,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  Theme,\n} from \"@material-ui/core\";\nimport { useGetAllAuthors } from \"../../hooks/author/useGetAllAuthors\";\nimport { Author } from \"../../common/interfaces/Author\";\nimport { Catergory } from \"../../common/interfaces/Category\";\nimport { useGetCategories } from \"../../hooks/category/useGetCategories\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\nfunction Filter(props: any) {\n  const classes = useStyles();\n  const firstAuthorsLoad = useGetAllAuthors();\n  const firstCategoriesLoad = useGetCategories();\n  const [authors, setAuthors] = useState<Author[] | undefined>([]);\n  const [categories, setCategories] = useState<Catergory[] | undefined>([]);\n  const [authorID, setAuthorID] = useState<string | unknown>(\"\");\n  const [categoryID, setCategoryID] = useState<string | unknown>(\"\");\n\n  useEffect(() => {\n    setAuthors(firstAuthorsLoad?.getAllAuthors);\n    setCategories(firstCategoriesLoad?.getAllCategories);\n  }, [firstAuthorsLoad, firstCategoriesLoad]);\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel>Author</InputLabel>\n        <Select\n          value={authorID}\n          onChange={(e) => {\n            setCategoryID(\"\");\n            setAuthorID(e.target.value);\n            props.filterByAuthor(e.target.value);\n          }}\n        >\n          {authors &&\n            authors?.map((author: Author) => {\n              return (\n                <MenuItem key={author?._id} value={author?._id}>\n                  {author.firstName} {author.lastName}\n                </MenuItem>\n              );\n            })}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel>Category</InputLabel>\n        <Select\n          value={categoryID}\n          onChange={(e) => {\n            setAuthorID(\"\");\n            setCategoryID(e.target.value);\n            props.filterByCategory(e.target.value);\n          }}\n        >\n          {categories &&\n            categories?.map((category: Catergory) => {\n              return (\n                <MenuItem key={category?._id} value={category?._id}>\n                  {category.name}\n                </MenuItem>\n              );\n            })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default Filter;\n","import { gql, useQuery } from \"@apollo/client\";\n\nexport const GET_BOOKS_BY_AUTHOR = gql`\n  query getBooksByAuthor($authorId: String!) {\n    getBooksByAuthor(authorId: $authorId) {\n      _id\n      title\n      price\n      author{\n        _id\n        firstName\n        lastName\n        email\n      }\n      category{\n        _id\n        name\n      }\n    }\n  }\n`;\nexport const useGetBooksByAuthor = (authorId: string | null) => {\n  const { data, error, refetch } = useQuery(GET_BOOKS_BY_AUTHOR, { variables: { authorId } });\n  if (error && process.env.NODE_ENV === 'development') {\n    console.log(error);\n  }\n  const booksByAuthor = data\n  const loadBooksByAuthor = refetch\n  return { booksByAuthor, loadBooksByAuthor }\n};\n","import { gql, useQuery } from \"@apollo/client\";\n\nexport const GET_BOOKS_BY_CATEGORY = gql`\n  query getBooksByCategory($categoryId: String!) {\n    getBooksByCategory(categoryId: $categoryId) {\n      _id\n      title\n      price\n      author{\n        _id\n        firstName\n        lastName\n        email\n      }\n      category{\n        _id\n        name\n      }\n    }\n  }\n`;\nexport const useGetBooksByCategory = (categoryId: string | null) => {\n  const { data, error, refetch } = useQuery(GET_BOOKS_BY_CATEGORY, { variables: { categoryId } });\n  if (error && process.env.NODE_ENV === 'development') {\n    console.log(error);\n  }\n  const booksByCategory = data\n  const loadBooksByCategory = refetch\n  return { booksByCategory, loadBooksByCategory }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Book } from \"../common/interfaces/Book\";\nimport BookDeck from \"../components/Books/BookDeck\";\nimport Filter from \"../components/Books/Filter\";\nimport { useGetAllBooks } from \"../hooks/book/useGetAllBooks\";\nimport { useGetBooksByAuthor } from \"../hooks/book/useGetByAuthor\";\nimport { useGetBooksByCategory } from \"../hooks/book/useGetByCategory\";\n\nfunction Home() {\n  const [books, setBooks] = useState<Book[] | undefined>([]);\n  const { booksByAuthor, loadBooksByAuthor } = useGetBooksByAuthor(null);\n  const { booksByCategory, loadBooksByCategory } = useGetBooksByCategory(null);\n  const firstLoad = useGetAllBooks();\n\n  useEffect(() => {\n    setBooks(firstLoad?.getAllBooks);\n  }, [firstLoad]);\n\n  useEffect(() => {\n    setBooks(booksByAuthor?.getBooksByAuthor);\n  }, [booksByAuthor?.getBooksByAuthor]);\n\n  useEffect(() => {\n    setBooks(booksByCategory?.getBooksByCategory);\n  }, [booksByCategory?.getBooksByCategory]);\n\n  async function filterByAuthor(authorId: string) {\n    await loadBooksByAuthor({ authorId });\n  }\n\n  async function filterByCategory(categoryId: string) {\n    await loadBooksByCategory({ categoryId });\n  }\n\n  return (\n    <Container className=\"mt-5\">\n      <Filter\n        filterByAuthor={filterByAuthor}\n        filterByCategory={filterByCategory}\n      />\n      <BookDeck books={books} />\n    </Container>\n  );\n}\n\nexport default Home;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email:String!,$password:String!) {\n    login(email:$email,password:$password) {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n`;\n","import { useMutation } from \"@apollo/client\";\nimport { Button, makeStyles, TextField, Container } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { LOGIN } from \"../hooks/user/LoginUser\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login() {\n  const [errorMessage, setErrorMessage] = useState(<></>);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const classes = useStyles();\n  const [login] = useMutation(LOGIN);\n\n  const submitHandler = async (e: any) => {\n    e.preventDefault();\n    try {\n      await login({ variables: { email, password } });\n      window.location.replace(\"/\");\n    } catch (error: any) {\n      setErrorMessage(<Alert variant=\"error\">No user Found</Alert>);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {errorMessage && errorMessage}\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={submitHandler}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email Address\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default Login;\n","import { gql } from \"@apollo/client\";\n\nexport const REGISTER = gql`\n  mutation register($data: RegisterInput!) {\n    register(data:$data) {\n      _id\n      firstName\n      lastName\n    }\n  }\n`;\n\n","import React, { useState } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER } from \"../hooks/user/Register\";\n\nfunction Register() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [register] = useMutation(REGISTER);\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    try {\n      await register({\n        variables: { data: { firstName, lastName, email, password } },\n      });\n      window.location.replace(\"/login\");\n    } catch (err: any) {\n      alert(err);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" className=\"mt-5\">\n      <form onSubmit={handleSubmit}>\n        <h3>Register</h3>\n\n        <div className=\"form-group\">\n          <label>First name</label>\n          <input\n            onChange={(e) => setFirstName(e.target.value)}\n            value={firstName}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"First name\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Last name</label>\n          <input\n            onChange={(e) => setLastName(e.target.value)}\n            value={lastName}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Last name\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Email</label>\n          <input\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"Enter email\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"Enter password\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-lg btn-block mt-3 w-100\"\n        >\n          Register\n        </button>\n        <p className=\"forgot-password text-right\">\n          Already registered <a href=\"/login\">log in?</a>\n        </p>\n      </form>\n    </Container>\n  );\n}\n\nexport default Register;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGOUT = gql`\n  mutation logout {\n    logout\n  }\n`;\n\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\n\nfunction MenuItem(props: any) {\n  return (\n    <Nav.Link\n      style={{ color: window.location.pathname === props.to ? \"#fff\" : \"\" }}\n      href={props.to}\n    >\n      {props.children}\n    </Nav.Link>\n  );\n}\n\nexport default MenuItem;\n","import { useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport { LOGOUT } from \"../../hooks/user/Logout\";\nimport MenuItem from \"./MenuItem\";\nimport \"./style.css\";\n\nfunction Header(props: any) {\n  const me = props.user;\n  console.log(me);\n\n  const [logout] = useMutation(LOGOUT);\n\n  const logoutHandler = () => {\n    logout();\n    window.location.replace(\"/\");\n  };\n\n  return (\n    <Navbar collapseOnSelect bg=\"primary\" variant=\"dark\" expand=\"sm\">\n      <Container>\n        <MenuItem to=\"/\">\n          <Navbar.Brand>Book Store</Navbar.Brand>\n        </MenuItem>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n          {me ? (\n            <>\n              <Nav className=\"me-auto\">\n                <MenuItem to=\"/books\">Books</MenuItem>\n                <MenuItem to=\"/authors\">Autors</MenuItem>\n                <MenuItem to=\"/categories\">Categories</MenuItem>\n              </Nav>\n              <Nav>\n                <Navbar.Text style={{ color: \"#fff\" }}>\n                  Hello {me?.firstName} {me?.lastName}\n                </Navbar.Text>\n                <Nav.Link color=\"black\" onClick={() => logoutHandler()}>\n                  Logout\n                </Nav.Link>\n              </Nav>\n            </>\n          ) : (\n            <Nav>\n              <MenuItem to=\"/login\">Login</MenuItem>\n              <MenuItem to=\"/register\">Register</MenuItem>\n            </Nav>\n          )}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { IsAuth } from \"../../hooks/user/isAuth\";\nimport Authors from \"../../pages/Authors\";\nimport Books from \"../../pages/Books\";\nimport Categories from \"../../pages/Categories\";\nimport Home from \"../../pages/Home\";\nimport Login from \"../../pages/Login\";\nimport Register from \"../../pages/Register\";\nimport Header from \"../Header/Header\";\n\nfunction Routes() {\n  const me = IsAuth();\n\n  return (\n    <BrowserRouter>\n      <div>\n        <Header user={me} />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/books\" component={me ? Books : Login} />\n          <Route exact path=\"/authors\" component={me ? Authors : Login} />\n          <Route exact path=\"/categories\" component={me ? Categories : Login} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"../../common/apollo-client\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Routes />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}